(()=>{var x=Object.create;var g=Object.defineProperty;var f=Object.getOwnPropertyDescriptor;var k=Object.getOwnPropertyNames;var h=Object.getPrototypeOf,B=Object.prototype.hasOwnProperty;var l=(t,e)=>()=>(e||t((e={exports:{}}).exports,e),e.exports);var S=(t,e,r,n)=>{if(e&&typeof e=="object"||typeof e=="function")for(let o of k(e))!B.call(t,o)&&o!==r&&g(t,o,{get:()=>e[o],enumerable:!(n=f(e,o))||n.enumerable});return t};var a=(t,e,r)=>(r=t!=null?x(h(t)):{},S(e||!t||!t.__esModule?g(r,"default",{value:t,enumerable:!0}):r,t));var u=l((H,d)=>{d.exports=wp.hooks});var m=l((L,y)=>{y.exports=wp.data});var C={display:{type:"string"},visibility:{type:"string"},overflow:{type:"string"}},E={width:{type:"string"},height:{type:"string"},maxWidth:{type:"string"},maxHeight:{type:"string"},minWidth:{type:"string"},minHeight:{type:"string"}},A={marginTop:{type:"string"},marginRight:{type:"string"},marginBottom:{type:"string"},marginLeft:{type:"string"}},T={paddingTop:{type:"string"},paddingRight:{type:"string"},paddingBottom:{type:"string"},paddingLeft:{type:"string"}},O={dimensionMode:{type:"string"},minDimensionMode:{type:"string"},maxDimensionMode:{type:"string"},marginMode:{type:"string"},paddingMode:{type:"string"}},D={flexDirection:{type:"string"},flexWrap:{type:"string"},justifyContent:{type:"string"},alignItems:{type:"string"},alignContent:{type:"string"},gapColumn:{type:"string"},gapRow:{type:"string"}},M={flexGrow:{type:"number"},flexShrink:{type:"number"},flexBasis:{type:"string"},alignSelf:{type:"string"},order:{type:"number"}},p={...C,...E,...A,...T,...D,...M,...O},R=Object.assign({},...Object.values(p));var b=a(u()),i=a(m());(0,b.addFilter)("blocks.registerBlockType","costered-blocks/setup-data-schema",t=>({...t,attributes:{...t.attributes,...p}}));function j(){return(0,i.useSelect)(t=>{let e=t("core/block-editor"),r=e.getSelectedBlockClientId();return{selectedBlock:r?e.getBlock(r):null,clientId:r}},[])}function _(t){return(0,i.useSelect)(e=>e("core/block-editor").getBlock(t),[t])}function W(t){let{updateBlockAttributes:e}=(0,i.useDispatch)("core/block-editor");return r=>{let n=Object.fromEntries(r.map(o=>[o,void 0]));e(t,n)}}function v(t){let e=_(t),{updateBlock:r}=(0,i.useDispatch)("core/block-editor");return o=>{if(!t||!e)return;let s={...e.attributes};o.forEach(c=>{c in s&&delete s[c]}),r(t,{...e,attributes:s})}}})();
